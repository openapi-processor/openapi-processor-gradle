import org.gradle.api.DefaultTask
import org.gradle.api.file.Directory
import org.gradle.api.provider.Provider
import org.gradle.api.tasks.InputFiles
import org.gradle.api.tasks.Internal
import org.gradle.api.tasks.OutputDirectory
import org.gradle.api.tasks.TaskAction
import java.io.File
import java.nio.file.Files
import java.time.Instant

/**
 * simple task to create a Version class.
 */

abstract class VersionTask: DefaultTask() {
    /**
     * the "build.gradle" file with the current versions.
     */
    @get:InputFiles
    abstract var buildFile: File

    /**
     * Target directory for the generated version class.
     */
    @get:OutputDirectory
    abstract var targetDir: Provider<Directory>

    @get:Internal
    abstract var pluginVersion: String

    @get:Internal
    abstract var apiVersion: String

    /**
     * generate the version class.
     */
    @TaskAction
    fun generateVersion () {
        val targetPkg = targetDir.get().dir("io").dir("openapiprocessor").dir("gradle")
        Files.createDirectories(targetPkg.asFile.toPath())

        val target = targetPkg.file("Version.java")
        target.asFile.writeText("""
            /*
             * DO NOT MODIFY - this file was auto generated by VersionPlugin.groovy
             *
             * ${Instant.now()}
             */

            package io.openapiprocessor.gradle;

            public class Version {
                public static final String version = "$pluginVersion";
                public static final String api = "$apiVersion";
            }
        """.trimIndent())
    }
}
